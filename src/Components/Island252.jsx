/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.8 public/models/island252.glb --keepmeshes
*/

import React, { useEffect, useRef, useState, useMemo } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";
import { useThree } from "@react-three/fiber";
import useColorStore from "../Utils/store";
import * as THREE from "three";
import { secondaryInteriorColorCodes } from "../Constants/island";

const getTexture = (path) => {
  const texture = new THREE.TextureLoader().load(path);
  texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
  texture.anisotropy = 16;

  texture.repeat.set(1, 4);
  return texture;
};
export default function Islandmodel(props) {
  const { nodes, materials } = useGLTF("./models/island252.glb");
  const { colors, activeState, setActiveState } = useColorStore();
  const seamless2 = useMemo(
    () => getTexture("/textures/alure/seamless2.png"),
    []
  );
  const seamless1 = useMemo(
    () => getTexture("/textures/alure/seamless1.png"),
    []
  );

  const { camera } = useThree();

  const primFencRef = useRef();
  const secFencRef = useRef();
  const primIntRef = useRef();
  const exteriorRailRef = useRef();
  const [texture, setTexture] = useState(
    colors["Interior Options"] === "#B8AB9E" ? seamless2 : seamless1
  );
  useEffect(() => {
    setTexture(
      colors["Interior Options"] === "#d1d1d1" ? seamless1 : seamless2
    );
  }, [colors]);

  useEffect(() => {
    switch (activeState) {
      case 0:
        gsap.to(camera.position, {
          x: 100,
          y: 50,
          z: 100,
          duration: 2,
          ease: "power.easeOut",
          onComplete: () => {
            setTimeout(() => {}, 100);
          },
          onStart: () => {
            gsap.to(camera.rotation, {
              x: 0,
              y: 0,
              z: 0,
            });
          },
        });
        break;
      case "Exterior Rail":
      case "Secondary Fence":
        gsap.to(camera.position, {
          x: 0,
          y: 16.5,
          z: 62.5,
          duration: 1,
          ease: "power.easeOut",

          onUpdate: () => {
            camera.lookAt(...secFencRef.current.position);
          },
        });
        break;
      case "Primary Fence":
        gsap.to(camera.position, {
          x: -40,
          y: 8,
          z: 50,
          duration: 2,
          ease: "power.easeOut",

          onUpdate: () => {
            camera.lookAt(...primFencRef.current.position);
          },
        });
        break;

      case "Interior Options":
        gsap.to(camera.position, {
          x: 62,
          y: 33,
          z: 21.4,
          duration: 2,

          onUpdate: () => {
            camera.lookAt(...primIntRef.current.position);
          },
        });
        break;

      default:
        break;
    }
  }, [activeState]);
  return (
    <group {...props} dispose={null} scale={12} position={[0, -2, 0]}>
      <mesh name='Primary Fence'
        ref={primFencRef}
        material-color={colors["Primary Fence"]} geometry={nodes.Primary_Fence.geometry} material={materials.Carpaint_Simple_Black__0} position={[2.28, 1.041, 0]} />
      <mesh name='Secondary Fence'
        ref={secFencRef}
        material-color={colors["Secondary Fence"]} geometry={nodes.Exterior_Accent.geometry} material={materials.Carpaint_Simple_grey__0} position={[2.28, 1.041, 0]} />
      <mesh name='Flooring'
        geometry={nodes.Flooring.geometry}
        material={materials.Rug_007_material} position={[0.623, 0.607, 0]} scale={[1, 1, 1.01]} ><meshPhysicalMaterial
        map={texture}
        attach='material'
        color={"#ffffff"}
        metalness={0.5}
        roughness={0.5}
      /></mesh >
      <mesh name='console'
        material-color={colors["Interior Options"]} geometry={nodes.Console.geometry} material={materials.Plastic_Metallic_white__0} position={[0.85, 1.05, 0.763]} />
      <group position={[0.49, 1.337, 0]} scale={[1, 0.83, 1]}>
        <mesh name='Primary Interior'
          ref={primIntRef}
          material-color={colors["Interior Options"]} geometry={nodes.Primary_Interior_1.geometry} material={materials.Leather_white_16_50cm__01} />
        <mesh name='Primary Interior'
          ref={primIntRef}
          material-color={colors["Interior Options"]} geometry={nodes.Primary_Interior_2.geometry} material={materials.Leather_white_16_50cm__0} />
      </group>
      <mesh name='Secondary Interior Vinyl'
        material-color={secondaryInteriorColorCodes[colors["Interior Options"]]} geometry={nodes.Secondary_Interior.geometry} material={materials.Leather_grey_16_50cm__0} position={[2.114, 0.967, -1.128]} scale={[1.054, 1.172, 1]} />
      <mesh geometry={nodes.Ski_Store.geometry} material={materials.Plastic_Simple_Blurry_Black__0} position={[1.554, 0.647, 0]} scale={[1.001, 1.002, 1.011]} />
      <group position={[0.623, 0.607, 0]} scale={[1, 1, 1.01]}>
        <mesh geometry={nodes['Z-Misc_1'].geometry} material={materials['Rug_007_material.001']} />
        <mesh geometry={nodes['Z-Misc_2'].geometry} material={materials.Chrome_Polished__01} />
        <mesh geometry={nodes['Z-Misc_3'].geometry} material={materials.Metal1} />
        <mesh geometry={nodes['Z-Misc_4'].geometry} material={materials.Glass_Coated_Red__0} />
        <mesh geometry={nodes['Z-Misc_5'].geometry} material={materials['Plastic_Simple_Blurry_Black__0.001']} />
        <mesh geometry={nodes['Z-Misc_6'].geometry} material={materials.Plastic_Simple_Blurry_Black__0_2} />
        <mesh geometry={nodes['Z-Misc_7'].geometry} material={materials.Plastic_Metallic_Black__0} />
        <mesh geometry={nodes['Z-Misc_8'].geometry} material={materials.Plastic_Metallic_Black__0_2} />
        <mesh geometry={nodes['Z-Misc_9'].geometry} material={materials.WorldGridMaterial} />
        <mesh geometry={nodes['Z-Misc_10'].geometry} material={materials.Glass_Coated_Green__0} />
        <mesh geometry={nodes['Z-Misc_11'].geometry} material={materials.Aluminum_Anodized_Clear__0} />
        <mesh geometry={nodes['Z-Misc_12'].geometry} material={materials['Leather_white_16_50cm__01.001']} />
        <mesh geometry={nodes['Z-Misc_13'].geometry} material={materials.Glass_Window_Neutral__0} />
        <mesh geometry={nodes['Z-Misc_14'].geometry} material={materials.Plain_Grey_Velvet_2466039_28cm__0} />
        <mesh geometry={nodes['Z-Misc_15'].geometry} material={materials.Iron_Blurry__0} />
        <mesh geometry={nodes['Z-Misc_16'].geometry} material={materials.Laminate_D02_120cm__0} />
        <mesh geometry={nodes['Z-Misc_17'].geometry} material={materials.Material__1257} />
        <mesh geometry={nodes['Z-Misc_18'].geometry} material={materials.Material__1280} />
        <mesh geometry={nodes['Z-Misc_19'].geometry} material={materials.Material__1245} />
        <mesh geometry={nodes['Z-Misc_20'].geometry} material={materials.Material__1233} />
        <mesh geometry={nodes['Z-Misc_21'].geometry} material={materials.Material__1292} />
        <mesh geometry={nodes['Z-Misc_22'].geometry} material={materials.Material__1304} />
        <mesh geometry={nodes['Z-Misc_23'].geometry} material={materials.Material__1316} />
        <mesh name='Primary Interior'
          ref={primIntRef}
          material-color={colors["Interior Options"]} geometry={nodes['Z-Misc_24'].geometry} material={materials.Plastic_Simple_Blurry_white_1} />
        <mesh geometry={nodes['Z-Misc_25'].geometry} material={materials.Chrome_Polished__0} />
        <mesh geometry={nodes['Z-Misc_26'].geometry} material={materials['Carpaint_Simple_Black__0.001']} />
        <mesh geometry={nodes['Z-Misc_27'].geometry} material={materials.Black_Plastic_mtl__0} />
        <mesh geometry={nodes['Z-Misc_28'].geometry} material={materials.Grey_Plastic_mtl__0} />
        <mesh geometry={nodes['Z-Misc_29'].geometry} material={materials.Plastic_Metallic_Black__0_3} />
      </group>
      <mesh name='Exterior Rail'
          ref={exteriorRailRef}
          material-color={colors["Exterior Rail"]} geometry={nodes.Railings.geometry} material={materials.Metal} position={[0.623, 0.607, 0]} scale={[1, 1, 1.01]} />
      <mesh geometry={nodes.Black_Interior.geometry} material={materials.Leather_Black_16_50cm__0} position={[0.623, 0.607, 0]} scale={[1, 1, 1.01]} />
    </group>
  )
}

useGLTF.preload('./models/island252.glb')

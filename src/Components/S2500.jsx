/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/s2500.glb 
*/

import React, { useEffect, useRef, useState, useMemo } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";
import { useThree } from "@react-three/fiber";
import useColorStore from "../Utils/store";
import * as THREE from "three";
import { secondaryInteriorColorCodes } from "../Constants/signature";

const getTexture = (path) => {
  const texture = new THREE.TextureLoader().load(path);
  texture.wrapS = texture.wrapT = THREE.RepeatWrapping;
  texture.anisotropy = 16;

  texture.repeat.set(1, 4);
  return texture;
};
export function Signature2500(props) {
  const { colors, activeState } = useColorStore();

  const { nodes, materials } = useGLTF("./models/S2500.glb");
  const seamless = useMemo(() => getTexture("/textures/seamless.png"), []);
  // const [texture, setTexture] = useState(
  //   colors["Interior Options"] === "#B8AB9E"
  //     ? materials["14_-_Polished_Aluminum"].map
  //     : seamless
  // );


  const [texture, setTexture] = useState(
    colors["Interior Options"] === "#B8AB9E"
      ? materials["14_-_Polished_Aluminum"].map
      : colors["Interior Options"] === "#878787"
      ? seamless
      : colors["Interior Options"] === "#9C6B3E"
      ? materials["14_-_Polished_Aluminum"].map
      : seamless // Replace "XXXXXX" and "YYYYYY" with your other color codes
  );
  
  useEffect(() => {
    setTexture(
      colors["Interior Options"] === "#B8AB9E"
        ? materials["14_-_Polished_Aluminum"].map
        : colors["Interior Options"] === "#878787"
        ? seamless
        : colors["Interior Options"] === "#9C6B3E"
        ? materials["14_-_Polished_Aluminum"].map
        : seamless // Replace "XXXXXX" and "YYYYYY" with your other color codes
    );
  }, [colors]);
  const { camera } = useThree();

  const primFencRef = useRef();
  const secFencRef = useRef();
  const primIntRef = useRef();
  const exteriorRailRef = useRef();
  // useEffect(() => {
  //   setTexture(
  //     colors["Interior Options"] === "#B8AB9E"
  //       ? materials["14_-_Polished_Aluminum"].map
  //       : seamless
  //   );
  // }, [colors]);

  useEffect(() => {
    switch (activeState) {
      case 0:
        gsap.to(camera.position, {
          x: 100,
          y: 50,
          z: 100,
          duration: 2,
          ease: "power.easeOut",
          onComplete: () => {
            setTimeout(() => {}, 100);
          },
          onStart: () => {
            gsap.to(camera.rotation, {
              x: 0,
              y: 0,
              z: 0,
            });
          },
        });
        break;
      case "Exterior Rail":
      case "Secondary Fence":
        gsap.to(camera.position, {
          x: 0,
          y: 16.5,
          z: 62.5,
          duration: 1,
          ease: "power.easeOut",

          onUpdate: () => {
            camera.lookAt(...secFencRef.current.position);
          },
        });
        break;
      case "Interior Options":
        gsap.to(camera.position, {
          x: 62,
          y: 33,
          z: 21.4,
          duration: 2,

          onUpdate: () => {
            camera.lookAt(...primIntRef.current.position);
          },
        });
        break;
      case "Primary Fence":
        gsap.to(camera.position, {
          x: -40,
          y: 8,
          z: 50,
          duration: 2,
          ease: "power.easeOut",

          onUpdate: () => {
            camera.lookAt(...primFencRef.current.position);
          },
        });
        break;

      default:
        break;
    }
  }, [activeState]);

  return (
    <group {...props} dispose={null} scale={12} position={[0, 7, 0]}>
      <mesh
        name="Console Color"
        material-color={colors["Interior Options"]}
        geometry={nodes.Console.geometry}
        material={materials.Plastic_Metallic_Brown__1}
        position={[0.304, 0.403, 0.634]}
      />
      <mesh
        name="Flooring Option"
        geometry={nodes.Flooring.geometry}
        material={materials["14_-_Polished_Aluminum"]}
        position={[0.336, -0.061, 0]}
        scale={[1, 1.511, 1]}
      >
        <meshPhysicalMaterial
          map={texture}
          attach="material"
          color={"#ffffff"}
          metalness={0.5}
          roughness={0.5}
        />
      </mesh>
      <mesh
        name="Primary Fence"
        ref={primFencRef}
        material-color={colors["Primary Fence"]}
        geometry={nodes.Primary_Fence.geometry}
        material={materials.Carpaint_Simple_White__0}
        position={[0.12, 0.029, 0]}
      />
      <mesh
        name="Secondary Fence"
        ref={secFencRef}
        material-color={colors["Secondary Fence"]}
        geometry={nodes.Exterior_Accent.geometry}
        material={materials.Carpaint_Simple_Black__0}
        position={[0.12, 0.029, 0]}
      />
      <mesh
        name="Exterior Rail"
        ref={exteriorRailRef}
        material-color={colors["Exterior Rail"]}
        geometry={nodes.Railing.geometry}
        material={materials.Iron_Blurry__1}
        position={[0.12, 0.029, 0]}
      />
      <mesh
        name="Primary Interior"
        ref={primIntRef}
        material-color={colors["Interior Options"]}
        geometry={nodes.Primary_Interior.geometry}
        material={materials.Leather_Brown_16_50cm__1}
        position={[-0.324, 0.339, -0.649]}
      />
      <group
        position={[1.188, 0.557, -0.782]}
        rotation={[0, 0, 0.669]}
        scale={[2.899, 3.522, 1.11]}
      >
        <mesh
          name="Secondary Interior"
          material-color={secondaryInteriorColorCodes[colors["Interior Options"]]}
          geometry={nodes.Secondary_Interior_1.geometry}
          material={materials.Leather_camel_pattern_16_50cm__0}
        />
        <mesh
          name="Secondary Interior"
          material-color={secondaryInteriorColorCodes[colors["Interior Options"]]}
          geometry={nodes.Secondary_Interior_2.geometry}
          material={materials.Leather_camel_16_50cm__0}
        />
      </group>
      <group position={[0.336, -0.061, 0]} scale={[1, 1.511, 1]}>
        <mesh
          geometry={nodes["Z-Misc_1"].geometry}
          material={materials.Iron_Blurry__1}
        />
        <mesh
          geometry={nodes["Z-Misc_2"].geometry}
          material={materials.Metal}
        />
        <mesh
          geometry={nodes["Z-Misc_3"].geometry}
          material={materials.Silk_03_Gray_6cm__0}
        />
        <mesh
          geometry={nodes["Z-Misc_4"].geometry}
          material={materials.Aluminum_Polished__0}
        />
        <mesh
          geometry={nodes["Z-Misc_5"].geometry}
          material={materials.Plastic_Simple_Blurry_Black__0}
        />
        <mesh
          geometry={nodes["Z-Misc_6"].geometry}
          material={materials.Aluminum_Polished__0_2}
        />
        <mesh
          geometry={nodes["Z-Misc_7"].geometry}
          material={materials.Plastic_Simple_Blurry_Black__0_2}
        />
        <mesh
          geometry={nodes["Z-Misc_8"].geometry}
          material={materials.Plastic_Metallic_Black__0}
        />
        <mesh
          geometry={nodes["Z-Misc_9"].geometry}
          material={materials.Metallic_Paint_Bronze_Dark__0}
        />
        <mesh
          geometry={nodes["Z-Misc_10"].geometry}
          material={materials.Iron_Blurry__0}
        />
        <mesh
          geometry={nodes["Z-Misc_11"].geometry}
          material={materials.Plastic_Simple_Blurry_Black__0_2}
        />
        <mesh
          geometry={nodes["Z-Misc_12"].geometry}
          material={materials.Laminate_D02_120cm__0}
        />
        <mesh
          geometry={nodes["Z-Misc_13"].geometry}
          material={materials.Plastic_Metallic_Black__1}
        />
        <mesh
          geometry={nodes["Z-Misc_14"].geometry}
          material={materials.Plastic_Simple_Blurry_Black__1}
        />
        <mesh
          geometry={nodes["Z-Misc_15"].geometry}
          material={materials.Glass_Coated_Blue__0}
        />
        <mesh
          geometry={nodes["Z-Misc_16"].geometry}
          material={materials.Glass_Coated_Red__0}
        />
        <mesh
          geometry={nodes["Z-Misc_17"].geometry}
          material={materials.Aluminum_Blurry__01}
        />
        <mesh
          geometry={nodes["Z-Misc_18"].geometry}
          material={materials.Aluminum_Blurry__01_2}
        />
        <mesh
          geometry={nodes["Z-Misc_19"].geometry}
          material={materials.Metallic_Paint_Bronze_Dark__0_2}
        />
        <mesh
          geometry={nodes["Z-Misc_20"].geometry}
          material={materials.Glass_Tinted_Blue__0}
        />
        <mesh
          geometry={nodes["Z-Misc_21"].geometry}
          material={materials.Aluminum_Blurry__01_3}
        />
        <mesh
          geometry={nodes["Z-Misc_22"].geometry}
          material={materials.Aluminum_Blurry__01_3}
        />
        <mesh
          geometry={nodes["Z-Misc_23"].geometry}
          material={materials.Plastic_Metallic_Black__1}
        />
        <mesh
          geometry={nodes["Z-Misc_24"].geometry}
          material={materials.Metallic_Paint_Bronze_Dark__0_3}
        />
        <mesh
          geometry={nodes["Z-Misc_25"].geometry}
          material={materials.Glass_Bumpy_01_10cm__0}
        />
        <mesh
          geometry={nodes["Z-Misc_26"].geometry}
          material={materials.Veneer_D02_120cm__0}
        />
        <mesh
          geometry={nodes["Z-Misc_27"].geometry}
          material={materials.Plastic_Simple_Blurry_Black__0_3}
        />
        <mesh
          geometry={nodes["Z-Misc_28"].geometry}
          material={materials.Plastic_Metallic_white__01}
        />
        <mesh
          geometry={nodes["Z-Misc_29"].geometry}
          material={materials.Plastic_Metallic_Black__01}
        />
        <mesh
          geometry={nodes["Z-Misc_30"].geometry}
          material={materials.Black_Plastic_mtl__0}
        />
        <mesh
          geometry={nodes["Z-Misc_31"].geometry}
          material={materials.Grey_Plastic_mtl__0}
        />
        <mesh
          geometry={nodes["Z-Misc_32"].geometry}
          material={materials.Iron_Blurry__0_2}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./models/s2500.glb");

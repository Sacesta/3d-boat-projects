/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/newprophet.glb -K 
*/

import React, { useEffect, useRef, useState, } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import useColorStore from "../Utils/store";
import { useThree } from "@react-three/fiber";
import gsap from "gsap";

export function Boat(props) {
  const { nodes, materials } = useGLTF('/models/newprophet.glb')

  const { colors, materialType } = useColorStore();

  const carbonFiberTexture = useTexture("/textures/carbon-fiber/1.png");
  const metallicTexture = useTexture("/textures/metallic/0.png");

  
    const { camera } = useThree();
    const { activeState, setActiveState } = useColorStore();
  
    useEffect(() => {
  // Function to handle interaction and stop the animation
  const handleInteraction = () => {
    // Stop ongoing animations for the camera position
    gsap.killTweensOf(camera.position);

    // Add more killTweensOf calls for other properties if needed
    // gsap.killTweensOf(otherObject.position);
    // gsap.killTweensOf(someOtherProperty);
  };

  switch (activeState) {
    case 0:
      gsap.to(camera.position, {
        x: 10,
        y: 3,
        z: 5,
        duration: 2.5,
        ease: "power4.Out",
        onComplete: () => {
          setTimeout(() => {}, 100);
        },
        onStart: () => {
          gsap.to(camera.rotation, {
            x: 0,
            y: 0,
            z: 0,
          });
        },
              });
      break;
    default:
      // Handle other cases here
      break;
  }

  // Add event listener to stop animation on interaction
  window.addEventListener("click", handleInteraction);

  // Cleanup event listener to avoid memory leaks
  return () => {
    window.removeEventListener("click", handleInteraction);
  };
}, [activeState]);
    
  

  return (
    
    <group onPointerMissed={() => setActiveState(0)} {...props} scale={0.01} position={[0, -0.356, 0]} dispose={null}>
      
      <group>
        <group>
          <group position={[-3.61, 0, 0]}>
            <group>
              <group>
                <group />
              </group>
              <group>
                <group>
                  <mesh material-color={colors["Base Body"]}
          material-map={
            materialType["Base Body"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.Mesh002.geometry} material={materials['body_1002.001']} />
                  <mesh material-color={colors["Base Body"]}
          material-map={
            materialType["Base Body"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.Mesh002_1.geometry} material={materials.body_1001} />
                </group>
                <mesh material-color={colors["Base Body"]}
          material-map={
            materialType["Base Body"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.GEO_prophet1003.geometry} material={materials['topCover_1001.001']} />
                <mesh material-color={colors["Base Body"]}
          material-map={
            materialType["Base Body"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.GEO_prophet1004.geometry} material={materials['topCover_1002.001']} />
                <mesh material-color={
            materialType["Deck Strip"] === "carbonFiber"
              ? "white"
              : colors["Deck Strip"]
          }
          material-map={
            materialType["Deck Strip"] === "carbonFiber"
              ? carbonFiberTexture
              : materialType["Deck Strip"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.GEO_prophet1005.geometry} material={materials['edgeBlack_1002.001']} />
                <mesh material-color={colors["Top Deck"]}
          material-map={
            materialType["Top Deck"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.GEO_prophet1006.geometry} material={materials.white_1002} />
                <mesh material-color={colors["Top Deck"]}
          material-map={
            materialType["Top Deck"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.GEO_prophet1007.geometry} material={materials.white_1003} />
              </group>
              <group>
                <group>
                  <group />
                  <group>
                    <mesh geometry={nodes.polySurface1615001.geometry} material={materials['inerParts_1001.001']} />
                  </group>
                </group>
              </group>
              <group>
                <group>
                  <mesh geometry={nodes.logo002.geometry} material={materials['Logo_1001.001']} />
                </group>
                <group>
                  <mesh geometry={nodes.logo2001.geometry} material={materials['Logo_1001.001']} />
                </group>
              </group>
              <group>
                <mesh geometry={nodes.nurbsToPoly9695001.geometry} material={materials['metalBlack_1001.001']} />
              </group>
              <group>
                <mesh geometry={nodes.pCylinder1001.geometry} material={materials['metalBlack_1001.001']} />
              </group>
              <group>
                <mesh geometry={nodes.polySurface1600prophet_boat001.geometry} material={materials['wheel_1001.001']} />
                <mesh geometry={nodes.polySurface1600prophet_boat002.geometry} material={materials['wheelMetal_1001.001']} />
              </group>
              <group>
                <mesh geometry={nodes.polySurface1613001.geometry} material={materials['Logo_1001.001']} />
              </group>
              <group />
              <group>
                <mesh geometry={nodes.prophet_boatpart3001.geometry} material={materials['metalBlack_1001.001']} />
              </group>
              <group />
              <group />
              <group>
                <group />
              </group>
            </group>
          </group>
          <group position={[132.833, 0, 0]}>
            <group>
              <group>
                <group />
              </group>
              <group>
                <mesh material-color={
            materialType["Interior"] === "carbonFiber"
              ? "white"
              : colors["Interior"]
          }
          material-map={
            materialType["Interior"] === "carbonFiber"
              ? carbonFiberTexture
              : materialType["Interior"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.GEO_prophet1010.geometry} material={materials.blinn1} position={[-136.816, 0, 0]} />
              </group>
              <group>
                <group>
                  <group />
                  <group />
                </group>
              </group>
              <group>
                <group />
                <group />
              </group>
              <group />
              <group />
              <group />
              <group />
              <group />
              <group />
              <group />
              <group />
              <group>
                <group />
              </group>
            </group>
          </group>
          <group position={[132.807, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
          <mesh geometry={nodes.prophet_boatpart003.geometry} material={materials['metalBlack_1001.002']} position={[0.833, 0, 0]} />
          <mesh geometry={nodes.prophet_boatpat1003.geometry} material={materials['metalBlack_1001.002']} position={[-0.938, 0, 0]} />
          <mesh geometry={nodes.prophet_boatpat003.geometry} material={materials['metalBlack_1001.002']} position={[-4.087, 0, 0]} />
          <mesh geometry={nodes.polySurface1602003.geometry} material={materials['plastic_1001.002']} position={[-3.223, 0, 0]} />
          <mesh geometry={nodes.pCylinder1seat1prophet_boat003.geometry} material={materials['seat1_1001.002']} position={[-3.447, 0, 0]} />
          <mesh geometry={nodes.Cube.geometry} material={materials['Material.001']} position={[-3.61, 0, 0]} />
          <mesh geometry={nodes.pCube1.geometry} material={materials.lambert1} position={[132.807, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
          <mesh material-color={
            materialType["Interior"] === "carbonFiber"
              ? "white"
              : colors["Interior"]
          }
          material-map={
            materialType["Interior"] === "carbonFiber"
              ? carbonFiberTexture
              : materialType["Interior"] === "metallic"
              ? metallicTexture
              : undefined
          } geometry={nodes.pCube2.geometry} material={materials['blinn1.001']} position={[-3.656, 13.206, -0.459]} rotation={[Math.PI / 2, 0, 0]} scale={[41.396, 21.186, 0.084]} />
        </group>
      </group>
    </group>
    
  )
}

useGLTF.preload('/models/newprophet.glb')
